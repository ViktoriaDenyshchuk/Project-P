@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore

@using Microsoft.AspNetCore.Identity;
@using SweetCreativity1.Core.Entities;


@model Order

@{
    ViewData["Title"] = Model.NameOrder;
}

<h1>Замовлення</h1>
@*<div class="row col-4">
    <img src="@Model.ListingPhotoPath" class="card-img-top" alt="@Model.NameOrder">
</div>*@
<hr />

<div class="row">
    <div class="col-2">Назва замовлення:</div>
    <div class="col-10"><strong>@Model.NameOrder</strong></div>
</div>
<hr />

<div class="row">
    <div class="col-2">Кількість:</div>
    <div class="col-4">@Model.Quantity</div>
</div>
<hr />

<div class="row">
    <div class="col-2">Загальна сума замовлення:</div>
    <div class="col-4">@Model.TotalPrice</div>
</div>
<hr />

<div class="row">
    <div class="col-2">Дата створення замовлення:</div>
    <div class="col-4">@Model.CreatedAtOrder</div>
</div>
<hr />
<div class="row">
    <div class="col-2">Ім'я та прізвище замовника:</div>
    <div class="col-4">
        @if (User.Identity.IsAuthenticated)
        {
            var userId = Model.UserId; // Замініть це на відповідний спосіб отримання ідентифікатора користувача
            var user = await UserManager.FindByIdAsync(userId);

            if (user != null)
            {
                <span>@user.FullName</span>
            }
        }
    </div>
</div>
<hr />


<div class="row">
    <div class="col-2">Номер телефону замовника:</div>
    <div class="col-4">@Model.CustomerNumber</div>
</div>
<hr />

@if (!User.IsInRole("Admin"))
{
    @if (User.IsInRole("Seller"))
    {
        <form method="post" asp-action="UpdateStatus" asp-route-id="@Model.Id">
            <div class="form-group">
                <label for="Status">Статус:</label>
                <select class="form-control" id="Status" asp-for="StatusId" asp-items="ViewBag.StatusList" style="max-height: 150px; overflow-y: auto;">
                </select>
            </div>
            <br />
            <button type="submit" class="btn btn-primary">Зберегти статус</button>
        </form>
    }
}
@if (User.IsInRole("Client") || User.IsInRole("Admin"))
{

    @*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*@

    <div class="row">
        <div class="col-2">Статус замовлення:</div>
        <div class="col-4">
            @if (Model.Status != null)
            {
                @if (Model.Status.StatusName == "Прийнято")
                {
                    <span class="text-success">@Model.Status.StatusName</span>
                }
                else if (Model.Status.StatusName == "Виконується")
                {
                    <span class="text-warning">@Model.Status.StatusName</span>
                }
                else if (Model.Status.StatusName == "Не прийнято")
                {
                    <span class="text-danger">@Model.Status.StatusName</span>
                }
            }
            else
            {
                <span class="text-muted">Статус ще не встановлено</span>
            }
        </div>
    </div>

}

@if (User.IsInRole("Admin"))
{
    <hr />
    <div class="col-1">
        <form method="post" asp-action="Delete" asp-route-id="@Model.Id">
            <button type="submit" class="btn btn-danger">Видалити</button>
        </form>
    </div>
}
@*<!-- Блок для відображення повідомлень -->
<div id="chat-container">
    <div id="chat-messages"></div>
</div>*@

@*<!-- Форма для відправлення повідомлень -->
<div id="message-form">
    <input type="text" id="message-input" placeholder="Введіть повідомлення">
    <button onclick="sendMessage()">Відправити</button>
</div>

<!-- JavaScript код -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const chatMessagesContainer = document.getElementById('chat-messages');
        const messageInput = document.getElementById('message-input');

        function loadMessages() {
            // Отримання повідомлень з сервера (AJAX-запит)
            fetch(`/api/getMessages?orderId=${orderId}`)
                .then(response => response.json())
                .then(data => displayMessages(data))
                .catch(error => console.error("Error:", error));
        }

        function displayMessages(messages) {
            chatMessagesContainer.innerHTML = '';
            messages.forEach(message => {
                const messageElement = document.createElement('div');
                messageElement.textContent = `${message.Sender}: ${message.Content}`;
                chatMessagesContainer.appendChild(messageElement);
            });
        }

        function sendMessage() {
            const content = messageInput.value;
            const data = { content, orderId: orderId };

            // Відправлення повідомлення на сервер (AJAX-запит)
            fetch('/api/sendMessage', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
                .then(response => response.json())
                .then(data => {
                    // Обробка відповіді від сервера (якщо потрібно)
                    // Наприклад, оновлення чату після успішної відправки
                    loadMessages();
                })
                .catch(error => console.error("Error:", error));
        }

        // Початкове завантаження повідомлень при завантаженні сторінки
        loadMessages();
    });
</script>
*@<div><h3>Чат</h3>
    @if (!User.IsInRole("Admin"))
    {
        <form method="post" asp-action="AddMessage" asp-controller="Order">
            <input type="hidden" name="orderId" value="@Model.Id" />
        <input type="hidden" name="userId" value="@UserManager.GetUserId(User)" /> 
        <div class="form-group">
            <label for="textMessage">Написати повідомлення:</label>
            <textarea name="textMessage" class="form-control"></textarea>
        </div>
        <div class="row">
            <div class="fixed-right p-3 d-flex justify-content-end">
                <button type="submit" class="btn btn-primary">Відправити</button>
            </div>
        </div>
    </form>
    }
</div>
@*@if (Model.ChatMessage != null && Model.ChatMessage.Count > 0)
{
    <ul>
        @foreach (var message in Model.ChatMessage)
        {
            <li>
                <strong>@message.UserId:</strong> @message.TextMessage
            </li>
        }
    </ul>
}
else
{
    <p>Наразі немає жодних повідомлень.</p>
}*@
@if (Model.ChatMessage != null && Model.ChatMessage.Count > 0)
{
    <ul>

        @foreach (var message in Model.ChatMessage)
        {
            var userId = @message.UserId; // Замініть це на відповідний спосіб отримання ідентифікатора користувача
            var user = await UserManager.FindByIdAsync(userId);

            if (user != null)
            {
                <li>
                    <strong>@user.FullName:</strong> @message.TextMessage
                </li>
            }
        }
    </ul>
}
else
{
    <p>Наразі немає жодних відгуків.</p>
}
@*
<div class="container">
    <div class="row p-1">
        <div class="col-1">User</div>
        <div class="col-5"><input type="text" id="userInput" /></div>
    </div>
    <div class="row p-1">
        <div class="col-1">Message</div>
        <div class="col-5"><input type="text" id="messageInput" /></div>
    </div>
    <div class="row p-1">
        <div class="col-6 text-end">User</div>
        <input type="button" id="sendButton" value="Send Message" />
    </div>
    <div class="row p-1">
        <div class="col-6"></div>
        <hr />
    </div>
</div>
<div class="row p-1">
    <div class="col-6">
        <ul id="messageList"></ul>
    </div>
</div>@*//assets/vendors/iconly/bold.css*@
@*<script src="~/wwwroot/lib/microsoft/signalr/dist/browser/signalr.js"></script>
<script src="~/wwwroot/lib/microsoft/chat.js"></script>
<!-- Оновлений JavaScript код -->
<script>
    var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

    document.getElementById("sendButton").disabled = true;

    connection.on("ReceiveMessage", function (user, message) {
        var li = document.createElement("li");
        li.textContent = `${user}: ${message}`;
        document.getElementById("messageList").appendChild(li);
    });

    connection.start().then(function () {
        document.getElementById("sendButton").disabled = false;
    }).catch(function (err) {
        return console.error(err.toString());
    });

    document.getElementById("sendButton").addEventListener("click", function (event) {
        var user = document.getElementById("userInput").value;
        var message = document.getElementById("messageInput").value;
        var orderId = /* Отримайте ID замовлення */;

        // Оновлення коду: Відправлення повідомлення на сервер
        connection.invoke("SendMessage", user, message, orderId).catch(function (err) {
            return console.error(err.toString());
        });

        event.preventDefault();
    });
</script>*@

@*</div>


</div>
*@
@*<div class="col-1">*@
    @*@if (User.Identity.IsAuthenticated)
    {
        var authenticatedUserId = UserManager.GetUserId(User);
        if (authenticatedUserId == Model.UserId || User.IsInRole("Admin"))
        {*@


           @*??????????????????????????????*@
    @*@if (User.Identity.IsAuthenticated && User.IsInRole("Seller") && Model.Listing != null && UserManager.GetUserId(User) == Model.Listing.UserId)
    {
        <!-- Allow editing/deleting only for the owner (seller) of the listing -->
        <form method="post" asp-action="Delete" asp-route-id="@Model.Id">
            <button type="submit" class="btn btn-danger">Видалити</button>
        </form>
        <hr />

        <form method="post" asp-action="UpdateStatus" asp-route-id="@Model.Id">
            <div class="form-group">
                <label for="Status">Статус:</label>
                <select class="form-control" id="Status" asp-for="StatusId" asp-items="ViewBag.StatusList" style="max-height: 150px; overflow-y: auto;">
                </select>
            </div>
            <br />
            <button type="submit" class="btn btn-primary">Зберегти статус</button>
        </form>
    }
</div>*@

<!-- Display order status for customer and administrator -->
@*@if (User.Identity.IsAuthenticated && (UserManager.GetUserId(User) == Model.CustomerNumber.ToString() || User.IsInRole("Admin")))
{
    <div class="row">
        <div class="col-2">Статус замовлення:</div>
        <div class="col-4">@Model.Status.StatusName</div>
    </div>
}*@

  @*  @if (User.Identity.IsAuthenticated && User.IsInRole("Seller") && Model.Listing != null && UserManager.GetUserId(User) == Model.Listing.UserId)
    {
        <!-- Allow editing status only for the seller of the listing -->
        <form method="post" asp-action="UpdateStatus" asp-route-id="@Model.Id">
            <div class="form-group">
                <label for="Status">Статус:</label>
                <select class="form-control" id="Status" asp-for="StatusId" asp-items="ViewBag.StatusList" style="max-height: 150px; overflow-y: auto;">
                </select>
            </div>
            <br />
            <button type="submit" class="btn btn-primary">Зберегти статус</button>
        </form>
    }
}*@



